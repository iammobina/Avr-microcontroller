/*****************************************************
Date    : 10/7/2020 2 pm start time end time 2:50 pm
Author  : Hossein Hossein pour 
*****************************************************/


#include <mega32.h>
#include <delay.h>

#define KEYPAD_R1 PORTD.0
#define KEYPAD_R2 PORTD.1
#define KEYPAD_R3 PORTD.2
#define KEYPAD_R4 PORTD.3
#define KEYPAD_C1 PIND.4
#define KEYPAD_C2 PIND.5
#define KEYPAD_C3 PIND.6
#define KEYPAD_C4 PIND.7

#define KEYPAD_NUM0 0
#define KEYPAD_NUM1 1
#define KEYPAD_NUM2 2
#define KEYPAD_NUM3 3
#define KEYPAD_NUM4 4
#define KEYPAD_NUM5 5
#define KEYPAD_NUM6 6
#define KEYPAD_NUM7 7
#define KEYPAD_NUM8 8
#define KEYPAD_NUM9 9
#define KEYPAD_DIV  10
#define KEYPAD_MUL  11
#define KEYPAD_PLS  12
#define KEYPAD_MNS  13
#define KEYPAD_EQU  14
#define KEYPAD_ON   15

unsigned char keypad_scan();
void delay();
unsigned char sec = 0;
unsigned char min = 58;
unsigned char hour = 23;
unsigned char day = 25;
unsigned char month = 9;
unsigned char year = 86;
unsigned char exit_counter = 0;
unsigned char num4_counter = 1;
int led = 1;

// Timer1 output compare A interrupt service routine
interrupt[TIM1_COMPA] void timer1_compa_isr(void)
{
    PORTD ^= (1<<0);
    sec = sec + 1;
    if(sec%2==0){
        led = 0;
    }else{
        led = 1;
    }           
    
    if (sec > 59)
    {
        min++;
        sec = 0;
    }
    if (min > 59)
    {
        hour++;
        min = 0;
    }
    if (hour > 23)
    {            
        day ++;
        hour = 0;
    }
    if (day > 30) 
    {
        month ++;
        day = 1;
    }
    if (month > 12)
    {
        year ++;
        month = 1;
    }
    if ( year > 99)
    {
        year = 0;
    }
}









unsigned char get_digit_code(unsigned char digit)

{
    if (digit == 0)
    {
        return 0x3F;
    }
    if (digit == 1)
    {
        return 0x06;
    }
    if (digit == 2)
    {
        return 0x5B;
    }
    if (digit == 3)
    {
        return 0x4F;
    }
    if (digit == 4)
    {
        return 0x66;
    }
    if (digit == 5)
    {
        return 0x6D;
    }
    if (digit == 6)
    {
        return 0x7D;
    }
    if (digit == 7)
    {
        return 0x07;
    }
    if (digit == 8)
    {
        return 0x7F;
    }
    if (digit == 9)
    {
        return 0x6F;
    }
}


void main(void)
{
unsigned char key_res; 
DDRC=0xFF;
DDRD=0x0F;
PORTC=0xFF;
PORTB=0xFF;
DDRA=0xFF;
DDRB=0xFF;


// Timer/Counter 1 initialization
    // Clock source: System Clock
    // Clock value: 31.250 kHz
    // Mode: CTC top=OCR1A
    // OC1A output: Discon.
    // OC1B output: Discon.
    // Noise Canceler: Off
    // Input Capture on Falling Edge
    // Timer1 Overflow Interrupt: Off
    // Input Capture Interrupt: Off
    // Compare A Match Interrupt: On
    // Compare B Match Interrupt: Off
    TCCR1A = 0x00;
    TCCR1B = 0x0C;
    TCNT1H = 0x00;
    TCNT1L = 0x00;
    ICR1H = 0x00;
    ICR1L = 0x00;
    OCR1AH = 0x7A;
    OCR1AL = 0x12;
    OCR1BH = 0x00;
    OCR1BL = 0x00;
// Timer(s)/Counter(s) Interrupt(s) initialization
    TIMSK = 0x10;
// Global enable interrupts
#asm("sei")



while (1)
      {
        //Digit 1
        // ---------- Hour ---------- 
        PORTB = 0b11111110;
        PORTA = 0b11101111;
        PORTC = get_digit_code((unsigned char)hour/10);
        delay();
        //delay_ms(3);
        // Digit 2
        PORTB = 0b11111101;
        PORTA = 0b11101111;
        PORTC = get_digit_code(hour%10);
        delay();
        //delay_ms(3);
        // Digit 3
        // ---------- Minute ---------- 
        PORTB = 0b11111011;
        PORTA = 0b11101111;
        PORTC = get_digit_code((unsigned char)min/10);
        delay();
        //delay_ms(3);
        // Digit 4
        PORTB = 0b11110111;
        PORTA = 0b11101111;
        PORTC = get_digit_code(min%10);
        delay();
        //delay_ms(3);
        // Digit 5
        // ---------- Day ---------- 
        PORTB = 0b11101111;
        PORTA = 0b11101111;
        PORTC = get_digit_code((unsigned char)day/10);
        delay();
        //delay_ms(3);
        // Digit 6        
        PORTB = 0b11011111;
        PORTC = get_digit_code(day%10);
        delay();
        //delay_ms(3);
        // Digit 7
        // ---------- Month ----------
        PORTA = 0b11111110;
        PORTB = 0b11111111;
        PORTC = get_digit_code((unsigned char)month/10);
        delay();
        //delay_ms(3);
        // Digit 8
        PORTA = 0b01111101;
        PORTB = 0b11111111;
        PORTC = get_digit_code(month%10);
        delay();
        //delay_ms(3);
        // Digit 9
        // ---------- year ----------
        PORTA = 0b11111011;
        PORTB = 0b11111111;
        PORTC = get_digit_code((unsigned char)year/10);
        delay();
        //delay_ms(3);
        // Digit 10
        PORTA = 0b11110111;
        PORTB = 0b11111111;
        PORTC = get_digit_code(year%10);
        delay();
        //delay_ms(3);
      key_res = keypad_scan();
      if(key_res != 255)
      { 
      while(keypad_scan() != 255);
      delay_ms(20);
      if (key_res == KEYPAD_NUM1)
      {
        exit_counter++;
        if (exit_counter == 2) 
        {
            exit_counter = 0;
        }  
      }
      else if (key_res == KEYPAD_NUM2)
      {
         if (exit_counter == 1) 
         {
            if (num4_counter == 1) 
            {
            if (hour / 10 == 0 && hour % 10 > 4) hour = 0;
            else if (hour / 10 == 1 | hour / 10 == 2) hour = (((hour / 10) - 1) * 10) + (hour % 10);
            else { hour = 20 + hour % 10; }
            }
            else if (num4_counter == 2)
            {
            if ( hour / 10 == 0 && hour % 10 == 0) hour = ((hour / 10) * 10) + 9;
            else if ( hour / 10 == 2 && hour % 10 == 0 ) hour = 23;
            else hour = hour - 1;   
            }
            else if (num4_counter == 3)
            {
            if ( min / 10 == 0) min = 50 + min % 10;
            else if (1 <= min / 10 <= 5) min = (((min / 10) - 1) * 10) + min % 10;
            else {}
            }
            else if (num4_counter == 4)
            {
            if ( min % 10 == 0) min = ((min / 10) * 10) + 9;
            else min = min - 1;
            }
            else if (num4_counter == 5)
            {
            if ( day / 10 == 0) day = 30;
            else if ( 1 <= day / 10 <= 3 ) day = (((day / 10) - 1) * 10) + day % 10;
            else {}
            }
            else if (num4_counter == 6)
            {
            if ( day % 10 == 0) day = ((day / 10) * 10) + 9;
            else if ( day / 10 == 0 && day % 10 == 1) day = 9;
            else day = day - 1;
            }
            else if (num4_counter == 7)
            {
            if ( month % 10 > 2) month = 12;
            else if ( month / 10 == 1 && 1 <= month % 10 <= 2) month = (((month / 10) - 1) * 10) + month % 10;
            else if ( month / 10 == 0 && 1 <= month % 10 <= 2) month =  10 + month % 10;
            else {} 
            }
            else if (num4_counter == 8)
            {
            if ( month % 10 == 0) month = ((month / 10) * 10) + 2;
            else if ( month / 10 == 0 && month % 10 == 1) month = 9;
            else month = month - 1;
            }
            else if (num4_counter == 9)
            {
            if ( 1 <= year / 10 <=9) year = (((year / 10) - 1) * 10) + year % 10;
            else if ( year / 10 == 0) year = 90 + year % 10;
            else {}
            }
            else if (num4_counter == 10)
            {
            if ( year % 10 == 0 ) year = ((year / 10) * 10) + 9;
            else year = year - 1; 
            }  
         
        }
        else {}
      } 
      else if (key_res == KEYPAD_NUM3)
      {
         if (exit_counter == 1) 
         {
            if (num4_counter == 1) 
            {
            if (hour / 10 == 1 && hour % 10 > 4) hour = 23;
            else if ( hour / 10 == 2) hour = hour % 10;
            else { hour = ((hour / 10) + 1) * 10 + hour % 10; }
            }
            else if (num4_counter == 2)
            {
            if ( hour / 10 == 2 && hour % 10 == 3) hour = 20;
            else if ( (hour / 10 == 0 || hour / 10 == 1 ) && hour % 10 == 9 ) hour = ((hour / 10) * 10);
            else hour = hour + 1;   
            }
            else if (num4_counter == 3)
            {
            if ( min / 10 == 5) min =  min % 10;
            else if (0 <= min / 10 <= 4 ) min = (((min / 10) + 1) * 10) + min % 10;
            else {}
            }
            else if (num4_counter == 4)
            {
            if ( min % 10 == 9) min = ((min / 10) * 10);
            else min = min + 1;
            }
            else if (num4_counter == 5)
            {
            if ( day / 10 == 3 ) day = 1;
            else if ( day / 10 == 2 && day % 10 > 0 ) day = 30;
            else { day = (((day / 10) + 1) * 10) + day % 10; }
            }
            else if (num4_counter == 6)
            {
            if ( day % 10 == 9 && day / 10 == 0) day = 1;
            else if ( day / 10 == 3) day = 30;
            else if ( day / 10 == 1 && day % 10 == 9) day = (((day / 10) + 1) * 10) + 9;
            else day = day + 1;
            }
            else if (num4_counter == 7)
            {
            if ( month % 10 > 2) month = 12;
            else if ( month / 10 == 1 && 1 <= month % 10 <= 2) month =  month % 10;
            else if ( month / 10 == 0 && 1 <= month % 10 <= 2) month =  10 + month % 10;
            else {} 
            }
            else if (num4_counter == 8)
            {
            if ( month == 12 ) month = 10;
            else if ( month / 10 == 0 && month % 10 == 9) month = 1;
            else month = month + 1;
            }
            else if (num4_counter == 9)
            {
            if ( 0 <= year / 10 <= 8) year = (((year / 10) + 1) * 10) + year % 10;
            else if ( year / 10 == 9) year =  year % 10;
            else {}
            }
            else if (num4_counter == 10)
            {
            if ( year % 10 == 9 ) year = ((year / 10) * 10);
            else year = year + 1; 
            }  
         
        }
        else {}
      }
      else if (key_res == KEYPAD_NUM4)
      {
        if (exit_counter == 1) 
        {
        if( num4_counter == 10 ) num4_counter = 0;
        num4_counter ++;
        
        }
        else 
        {
        }  
      }
     
      }
      }
}


void delay()
{
    TCCR0 = (1 << CS02) | (1 << CS00);
    TCNT0 = 231;
    while ((TIFR & (1 << TOV0)) == 0);
    TIFR = (1 << TOV0);
}

unsigned char keypad_scan()
{
unsigned char result=255;
////////////////////////  ROW1 ////////////////////////
KEYPAD_R1 = 1; KEYPAD_R2 = 0;  KEYPAD_R3 = 0;  KEYPAD_R4 = 0; //set Row1 for Keypad
delay_ms(5);
if (KEYPAD_C1)
result = KEYPAD_NUM7;
else if (KEYPAD_C2)
result = KEYPAD_NUM8;
else if (KEYPAD_C3)
result = KEYPAD_NUM9;
else if (KEYPAD_C4)
result = KEYPAD_DIV;

////////////////////////  ROW2 ////////////////////////
KEYPAD_R1 = 0; KEYPAD_R2 = 1;  KEYPAD_R3 = 0;  KEYPAD_R4 = 0; //set Row2 for Keypad
delay_ms(5);
if (KEYPAD_C1)
result = KEYPAD_NUM4;
else if (KEYPAD_C2)
result = KEYPAD_NUM5;
else if (KEYPAD_C3)
result = KEYPAD_NUM6;
else if (KEYPAD_C4)
result = KEYPAD_MUL;

////////////////////////  ROW3 ////////////////////////
KEYPAD_R1 = 0; KEYPAD_R2 = 0;  KEYPAD_R3 = 1;  KEYPAD_R4 = 0; //set Row3 for Keypad
delay_ms(5);
if (KEYPAD_C1)
result = KEYPAD_NUM1;
else if (KEYPAD_C2)
result = KEYPAD_NUM2;
else if (KEYPAD_C3)
result = KEYPAD_NUM3;
else if (KEYPAD_C4)
result = KEYPAD_MNS;

////////////////////////  ROW4 ////////////////////////
KEYPAD_R1 = 0; KEYPAD_R2 = 0;  KEYPAD_R3 = 0;  KEYPAD_R4 = 1; //set Row4 for Keypad
delay_ms(5);
if (KEYPAD_C1)
result = KEYPAD_ON;
else if (KEYPAD_C2)
result = KEYPAD_NUM0;
else if (KEYPAD_C3)
result = KEYPAD_EQU;
else if (KEYPAD_C4)
result = KEYPAD_PLS;

return result;
} 
