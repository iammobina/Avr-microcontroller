;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.12 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 7/19/2020
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega32
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 512
;*******************************************************/
;
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;// Alphanumeric LCD functions
;#include <alcd.h>
;#include <delay.h>
;// Declare your global variables here
;
;// Standard Input/Output functions
;#include <stdio.h>
;char input;
;int i=0;
;unsigned char a ='a';
;void main(void)
; 0000 0025 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0026 // Declare your local variables here
; 0000 0027 
; 0000 0028 // Input/Output Ports initialization
; 0000 0029 // Port A initialization
; 0000 002A // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 002B DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 002C // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 002D PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 002E 
; 0000 002F // Port B initialization
; 0000 0030 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0031 DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0032 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0033 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0034 
; 0000 0035 // Port C initialization
; 0000 0036 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0037 DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0038 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0039 PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 003A 
; 0000 003B // Port D initialization
; 0000 003C // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 003D DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 003E // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 003F PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0040 
; 0000 0041 // USART initialization
; 0000 0042 // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 0043 // USART Receiver: On
; 0000 0044 // USART Transmitter: On
; 0000 0045 // USART Mode: Asynchronous
; 0000 0046 // USART Baud Rate: 9600
; 0000 0047 UCSRA=(0<<RXC) | (0<<TXC) | (0<<UDRE) | (0<<FE) | (0<<DOR) | (0<<UPE) | (0<<U2X) | (0<<MPCM);
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0048 UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (1<<RXEN) | (1<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0049 UCSRC=(1<<URSEL) | (0<<UMSEL) | (0<<UPM1) | (0<<UPM0) | (0<<USBS) | (1<<UCSZ1) | (1<<UCSZ0) | (0<<UCPOL);
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 004A UBRRH=0x00;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 004B UBRRL=0x33;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 004C 
; 0000 004D // Alphanumeric LCD initialization
; 0000 004E // Connections are specified in the
; 0000 004F // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 0050 // RS - PORTC Bit 0
; 0000 0051 // RD - PORTC Bit 1
; 0000 0052 // EN - PORTC Bit 2
; 0000 0053 // D4 - PORTC Bit 4
; 0000 0054 // D5 - PORTC Bit 5
; 0000 0055 // D6 - PORTC Bit 6
; 0000 0056 // D7 - PORTC Bit 7
; 0000 0057 // Characters/line: 16
; 0000 0058 lcd_init(16);
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0059 lcd_putchar(a);
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 005A while (1)
;PCODE: $0000002C VOL: 0
; 0000 005B       {
; 0000 005C       // Place your code here
; 0000 005D        input =getchar();
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 005E 
; 0000 005F        if (input == 'C')
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0060        {
; 0000 0061        lcd_clear();
;PCODE: $00000032 VOL: 0
; 0000 0062        }
; 0000 0063        if (input == 'N')
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0064        {
; 0000 0065          putchar(0x0a);
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0066          putchar(0x0d);
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0067          puts("Mobina Kashanian");
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0068          putchar(0x0a);
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0069          putchar(0x0d);
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 006A          delay_ms(100);
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 006B 
; 0000 006C        }
; 0000 006D        if (input == 'c')
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 006E        {
; 0000 006F         for(i=0;i<24;i++)
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0070         {
; 0000 0071          putchar(0x0a);
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0072          putchar(0x0d);
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0073         }
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0074        }
; 0000 0075        if (input == 'M')
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0076        {
; 0000 0077          lcd_clear();
;PCODE: $00000060 VOL: 0
; 0000 0078          lcd_puts("Mobina Kashanian");
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 0079          delay_ms(500);
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 007A        }
; 0000 007B        delay_ms(100);
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 007C       }
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 007D }
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0

	.DSEG
_0x8:
	.BYTE 0x22
